@page
@model Management_Of_Educational_Cycles.View.Pages.EducationalCycles.CreateModel

@{
    ViewData["Title"] = "Create";
}
<script src="js/site.js" asp-append-version="true"></script>
<h1>Create</h1>

<h4>EducationalCycle</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="educationalCycleEditViewModel.CycleName" class="control-label"></label>
                <input asp-for="educationalCycleEditViewModel.CycleName" class="form-control" />
                <span asp-validation-for="educationalCycleEditViewModel.CycleName" class="text-danger"></span>
            </div>
            <div class="form-group">
                @if (Model.educationalCycleEditViewModel.Faculties == null)
                {
                    Model.educationalCycleEditViewModel.Faculties = new List<SelectListItem>();
                }
                @Html.LabelFor(x => Model.educationalCycleEditViewModel.SelectedFaculty, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.DropDownListFor(x => Model.educationalCycleEditViewModel.SelectedFaculty,
                      new SelectList(Model.educationalCycleEditViewModel.Faculties, "Value", "Text"),
                      htmlAttributes: new { @class = "form-control", id = "Faculty", @required = true })
                    @Html.ValidationMessageFor(x => x.educationalCycleEditViewModel.SelectedFaculty, "", new { @class = "text-danger" })
                </div>
                </div>
                <div class="form-group">
                    @if (Model.educationalCycleEditViewModel.Departments == null)
                    {
                        Model.educationalCycleEditViewModel.Departments = new List<SelectListItem>();
                    }
                    @Html.LabelFor(x => Model.educationalCycleEditViewModel.SelectedDepartment, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.DropDownListFor(x => Model.educationalCycleEditViewModel.SelectedDepartment,
                          new SelectList(Model.educationalCycleEditViewModel.Departments, "Value", "Text"),
                          htmlAttributes: new { @class = "form-control", @id = "Department", @required = true })
                        @Html.ValidationMessageFor(x => x.educationalCycleEditViewModel.SelectedDepartment, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @if (Model.educationalCycleEditViewModel.Groups == null)
                    {
                        Model.educationalCycleEditViewModel.Groups = new List<SelectListItem>();
                    }
                    @Html.LabelFor(x => Model.educationalCycleEditViewModel.SelectedGroup, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.DropDownListFor(x => Model.educationalCycleEditViewModel.SelectedGroup,
                          new SelectList(Model.educationalCycleEditViewModel.Groups, "Value", "Text"),
                          htmlAttributes: new { @class = "form-control", @id = "Group", @required = true })
                        @Html.ValidationMessageFor(x => x.educationalCycleEditViewModel.SelectedGroup, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @if (Model.educationalCycleEditViewModel.Disciplines == null)
                    {
                        Model.educationalCycleEditViewModel.Disciplines = new List<SelectListItem>();
                    }
                    @Html.LabelFor(x => Model.educationalCycleEditViewModel.SelectedDiscipline, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.DropDownListFor(x => Model.educationalCycleEditViewModel.SelectedDiscipline,
                          new SelectList(Model.educationalCycleEditViewModel.Disciplines, "Value", "Text"),
                          htmlAttributes: new { @class = "form-control", @id = "Group", @required = true })
                        @Html.ValidationMessageFor(x => x.educationalCycleEditViewModel.SelectedDiscipline, "", new { @class = "text-danger" })
                    </div>
                    @if (Model.educationalCycleEditViewModel.TypesOfClasses == null)
                    {
                        Model.educationalCycleEditViewModel.TypesOfClasses = new List<SelectListItem>();
                    }
                    @Html.LabelFor(x => Model.educationalCycleEditViewModel.SelectedTypeOfClasses, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.DropDownListFor(x => Model.educationalCycleEditViewModel.SelectedTypeOfClasses,
                          new SelectList(Model.educationalCycleEditViewModel.TypesOfClasses, "Value", "Text"),
                          htmlAttributes: new { @class = "form-control", id = "TypeOfClasses", @required = true })
                        @Html.ValidationMessageFor(x => x.educationalCycleEditViewModel.SelectedTypeOfClasses, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label asp-for="educationalCycleEditViewModel.NumberOfHours" class="control-label"></label>
                    <input asp-for="educationalCycleEditViewModel.NumberOfHours" class="form-control" />
                    <span asp-validation-for="educationalCycleEditViewModel.NumberOfHours" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="educationalCycleEditViewModel.Semester" class="control-label"></label>
                    <input asp-for="educationalCycleEditViewModel.Semester" class="form-control" />
                    <span asp-validation-for="educationalCycleEditViewModel.Semester" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
                
</form>
    </div>
</div>

<div>
    <a asp-page="Index">Back to List</a>
</div>