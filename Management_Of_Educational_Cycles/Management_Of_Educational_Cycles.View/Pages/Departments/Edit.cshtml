@page
@model Management_Of_Educational_Cycles.View.Pages.Departments.EditModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Department</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="DepartmentEditViewModel.DepartmentId" />
            <div class="form-group">
                <label asp-for="DepartmentEditViewModel.DepartmentName" class="control-label"></label>
                <input asp-for="DepartmentEditViewModel.DepartmentName" class="form-control" />
                <span asp-validation-for="DepartmentEditViewModel.DepartmentName" class="text-danger"></span>
            </div>
            <div class="form-group">
                @if (Model.DepartmentEditViewModel.Faculties == null)
                {
                    Model.DepartmentEditViewModel.Faculties = new List<SelectListItem>();
                }
                @Html.LabelFor(x => Model.DepartmentEditViewModel.SelectedFaculty, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.DropDownListFor(x => Model.DepartmentEditViewModel.SelectedFaculty,
                      new SelectList(Model.DepartmentEditViewModel.Faculties, "Value", "Text"),
                      htmlAttributes: new { @class = "form-control", id = "Faculty", @required = true })
                    @Html.ValidationMessageFor(x => x.DepartmentEditViewModel.SelectedFaculty, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="./Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
