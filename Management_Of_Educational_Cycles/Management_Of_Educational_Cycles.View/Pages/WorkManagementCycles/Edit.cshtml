@page
@model Management_Of_Educational_Cycles.View.Pages.WorkManagementCycles.EditModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>WorkManagementCycle</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="WorkManagementCycleEditViewModel.CycleId" />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="WorkManagementCycleEditViewModel.CycleName" class="control-label"></label>
                <input asp-for="WorkManagementCycleEditViewModel.CycleName" class="form-control" />
                <span asp-validation-for="WorkManagementCycleEditViewModel.CycleName" class="text-danger"></span>
            </div>
            <div class="form-group">
                @if (Model.WorkManagementCycleEditViewModel.Faculties == null)
                {
                    Model.WorkManagementCycleEditViewModel.Faculties = new List<SelectListItem>();
                }
                @Html.LabelFor(x => Model.WorkManagementCycleEditViewModel.SelectedFaculty, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.DropDownListFor(x => Model.WorkManagementCycleEditViewModel.SelectedFaculty,
                      new SelectList(Model.WorkManagementCycleEditViewModel.Faculties, "Value", "Text"),
                      htmlAttributes: new { @class = "form-control", id = "Faculty", @required = true })
                    @Html.ValidationMessageFor(x => x.WorkManagementCycleEditViewModel.SelectedFaculty, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @if (Model.WorkManagementCycleEditViewModel.Departments == null)
                    {
                        Model.WorkManagementCycleEditViewModel.Departments = new List<SelectListItem>();
                    }
                    @Html.LabelFor(x => Model.WorkManagementCycleEditViewModel.SelectedDepartment, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.DropDownListFor(x => Model.WorkManagementCycleEditViewModel.SelectedDepartment,
                          new SelectList(Model.WorkManagementCycleEditViewModel.Departments, "Value", "Text"),
                          htmlAttributes: new { @class = "form-control", @id = "Department", @required = true })
                        @Html.ValidationMessageFor(x => x.WorkManagementCycleEditViewModel.SelectedDepartment, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @if (Model.WorkManagementCycleEditViewModel.Groups == null)
                    {
                        Model.WorkManagementCycleEditViewModel.Groups = new List<SelectListItem>();
                    }
                    @Html.LabelFor(x => Model.WorkManagementCycleEditViewModel.SelectedGroup, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.DropDownListFor(x => Model.WorkManagementCycleEditViewModel.SelectedGroup,
                          new SelectList(Model.WorkManagementCycleEditViewModel.Groups, "Value", "Text"),
                          htmlAttributes: new { @class = "form-control", @id = "Group", @required = true })
                        @Html.ValidationMessageFor(x => x.WorkManagementCycleEditViewModel.SelectedGroup, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label asp-for="WorkManagementCycleEditViewModel.NumberOfHours" class="control-label"></label>
                    <input asp-for="WorkManagementCycleEditViewModel.NumberOfHours" class="form-control" />
                    <span asp-validation-for="WorkManagementCycleEditViewModel.NumberOfHours" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="WorkManagementCycleEditViewModel.Semester" class="control-label"></label>
                    <input asp-for="WorkManagementCycleEditViewModel.Semester" class="form-control" />
                    <span asp-validation-for="WorkManagementCycleEditViewModel.Semester" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="./Index">Back to List</a>
</div>

@*@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}*@
@section Scripts {
    <script type="text/javascript">
        $('#Faculty').change(function () {

                var selectedFaculty = $("#Faculty").val();
            var departmentsSelect = $('#Department');
            var groupsSelect = $('#Group');
            departmentsSelect.empty();
            groupsSelect.empty();
                if (selectedFaculty != null && selectedFaculty != '') {
                    $.ajax({
                        type: "POST",
                        url: "/WorkManagementCycles/Create?handler=Departments",
                        beforeSend: function (xhr) {
                            xhr.setRequestHeader("XSRF-TOKEN",
                                $('input:hidden[name="__RequestVerificationToken"]').val());
                        },
                        data: selectedFaculty,
                        contentType: "json; charset=utf-8",
                        success: function (departments) {
                            if (departments != null && !jQuery.isEmptyObject(departments)) {
                                departmentsSelect.append($('<option/>', {
                                    value: null,
                                    text: "--- select department ---"
                                }));
                                $.each(departments, function (index, department) {
                                    departmentsSelect.append("<option value='" + department.value + "'>" + department.text + "</option>");
                                });
                            };
                        },
                        failure: function (response) {
                            alert(response);
                        }
                    });
                }
            });
        $('#Department').change(function () {
            alert("group");
            var selectedDepartment = $("#Department").val();
            var groupsSelect = $('#Group');
            groupsSelect.empty();
            if (selectedDepartment != null && selectedDepartment != '') {
                $.ajax({
                    type: "POST",
                    url: "/WorkManagementCycles/Create?handler=Groups",
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader("XSRF-TOKEN",
                            $('input:hidden[name="__RequestVerificationToken"]').val());
                    },
                    data: selectedDepartment,
                    contentType: "json; charset=utf-8",
                    success: function (groups) {
                        if (groups != null && !jQuery.isEmptyObject(groups)) {
                            groupsSelect.append($('<option/>', {
                                value: null,
                                text: "--- select group ---"
                            }));
                            $.each(groups, function (index, group) {
                                groupsSelect.append("<option value='" + group.value + "'>" + group.text + "</option>");
                            });
                        };
                    },
                    failure: function (response) {
                        alert(response);
                    }
                });
            }
        });
    </script>

}