@page
@model Management_Of_Educational_Cycles.View.Pages.Teachers.CreateModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Teacher</h4>
<hr />

<div class="row">
    <div class="col-md-12">
        <h1>Create a new teacher</h1>
        <p>
            Create a new teacher by entering a teacher name, teacher surname, and selecting a faculty and department (if any).
        </p>
    </div>
</div>


<form method="post">
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
      
        <div class="form-group">
            @Html.LabelFor(model => model.TeacherEditViewModel.TeacherName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TeacherEditViewModel.TeacherName,
                  new { htmlAttributes = new { @class = "form-control", @autofocus = "autofocus", @required = true } })
                @Html.ValidationMessageFor(model => model.TeacherEditViewModel.TeacherName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TeacherEditViewModel.TeacherSurname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TeacherEditViewModel.TeacherSurname,
                  new { htmlAttributes = new { @class = "form-control", @autofocus = "autofocus", @required = true } })
                @Html.ValidationMessageFor(model => model.TeacherEditViewModel.TeacherSurname, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @if (Model.TeacherEditViewModel.Faculties == null)
        {
            Model.TeacherEditViewModel.Faculties = new List<SelectListItem>();
        }
        @Html.LabelFor(x => Model.TeacherEditViewModel.SelectedFaculty, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.DropDownListFor(x => Model.TeacherEditViewModel.SelectedFaculty,
              new SelectList(Model.TeacherEditViewModel.Faculties, "Value", "Text"),
              htmlAttributes: new { @class = "form-control", id = "Faculty", @required = true })
            @Html.ValidationMessageFor(x => x.TeacherEditViewModel.SelectedFaculty, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @if (Model.TeacherEditViewModel.Departments == null)
        {
            Model.TeacherEditViewModel.Departments = new List<SelectListItem>();
        }
        @Html.LabelFor(x => Model.TeacherEditViewModel.SelectedDepartment, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.DropDownListFor(x => Model.TeacherEditViewModel.SelectedDepartment,
              new SelectList(Model.TeacherEditViewModel.Departments, "Value", "Text"),
              htmlAttributes: new { @class = "form-control", @id = "Department",  @required = true })
            @Html.ValidationMessageFor(x => x.TeacherEditViewModel.SelectedDepartment, "", new { @class = "text-danger" })
        </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
    </div>
</form>

<div>
    <a asp-page="Index">Back to List</a>
</div>
    
